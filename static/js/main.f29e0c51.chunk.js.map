{"version":3,"sources":["components/FeedbackOptions/FeedbackButton/FeedbackButton.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js"],"names":["FeedbackButton","name","handleClick","className","onClick","FeedbackOptions","options","onLeaveFeedback","map","key","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","title","children","App","state","handleBtn","setState","prevState","countTotalFeedback","this","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAiBeA,MAbf,YAAgD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC9B,OACE,4BAAQC,UAAU,aAAaC,QAAS,kBAAMF,EAAYD,KACvDA,I,MCaQI,MAff,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,yBAAKJ,UAAU,mBACZG,EAAQE,KAAI,SAAAP,GAAI,OACf,kBAAC,EAAD,CAAgBQ,IAAKR,EAAMA,KAAMA,EAAMC,YAAaK,S,MCgB7CG,MArBf,YAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC/C,OACE,wBAAIZ,UAAU,YACZ,wBAAIA,UAAU,gBAAd,SAAoC,8BAAOQ,GAA3C,KACA,wBAAIR,UAAU,gBAAd,aAAwC,8BAAOS,GAA/C,KACA,wBAAIT,UAAU,gBAAd,QAAmC,8BAAOU,GAA1C,KACA,wBAAIV,UAAU,gBAAd,UAAqC,8BAAOW,GAA5C,KACA,wBAAIX,UAAU,gBAAd,sBAAiD,8BAAOY,EAAP,MAAjD,OCHSC,MANf,YAAmC,IAAXC,EAAU,EAAVA,QACpB,OACA,4BAAKA,I,MCaMC,MAZf,YAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACtB,OAAQ,iCACR,4BAAKD,GACJC,ICFgBC,E,4MACnBC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,UAAY,SAAAtB,GACV,EAAKuB,UAAS,SAAAC,GACZ,OAAO,eACJxB,EAAOwB,EAAUxB,GAAQ,O,EAKhCyB,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBX,KADiB,EACXC,QADW,EACFC,K,uDAIf,IAAD,EACwBc,KAAKL,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQa,KAAKD,qBACbX,EAAqBa,KAAKC,MAAc,IAAPlB,EAAcG,GACrD,OACE,oCACE,kBAAC,EAAD,CAASK,MAAM,yBACb,kBAAC,EAAD,CACEb,QAASwB,OAAOC,KAAKJ,KAAKL,OAC1Bf,gBAAiBoB,KAAKJ,aAI1B,kBAAC,EAAD,CAASJ,MAAM,cACZL,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcE,QAAQ,4B,GA3CDe,aCFjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f29e0c51.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackButton.scss';\r\n\r\nfunction FeedbackButton({ name, handleClick }) {\r\n  return (\r\n    <button className=\"feedButton\" onClick={() => handleClick(name)}>\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nFeedbackButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackButton;\r\n","import React from 'react';\r\nimport FeedbackButton from './FeedbackButton/FeedbackButton';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOption.scss';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className=\"optionContainer\">\r\n      {options.map(name => (\r\n        <FeedbackButton key={name} name={name} handleClick={onLeaveFeedback} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './Statistics.scss';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage}) {\r\n  return (\r\n    <ul className=\"statList\">\r\n      <li className=\"statListItem\" >Good: <span>{good}</span> </li>\r\n      <li className=\"statListItem\" >Neutral:  <span>{neutral}</span> </li>\r\n      <li className=\"statListItem\" >Bad: <span>{bad}</span> </li>\r\n      <li className=\"statListItem\" >Total: <span>{total}</span> </li>\r\n      <li className=\"statListItem\" >Positive feedback: <span>{positivePercentage} %</span> </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: propTypes.number.isRequired,\r\n  neutral: propTypes.number.isRequired,\r\n  bad: propTypes.number.isRequired,\r\n  total: propTypes.number.isRequired,\r\n  positivePercentage: propTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nfunction Notification ({message}) {\r\n    return (\r\n    <h3>{message}</h3>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './Section.scss';\r\n\r\n\r\nfunction Section ({title, children}) {\r\n    return (<section >\r\n    <h2>{title}</h2>\r\n    {children}\r\n    </section>)\r\n}\r\n\r\nSection.propTypes = {\r\n    title: propTypes.string.isRequired,\r\n    children: propTypes.object.isRequired,\r\n  };\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\nimport Section from './Section/Section';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleBtn = name => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [name]: prevState[name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = Math.round((good * 100) / total);\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleBtn}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}